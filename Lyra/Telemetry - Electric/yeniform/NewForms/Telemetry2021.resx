<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>